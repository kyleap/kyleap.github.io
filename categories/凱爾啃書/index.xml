<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>凱爾啃書 on Kyle Studio</title>
    <link>https://kyleap.github.io/categories/%E5%87%B1%E7%88%BE%E5%95%83%E6%9B%B8/</link>
    <description>Recent content in 凱爾啃書 on Kyle Studio</description>
    <image>
      <title>Kyle Studio</title>
      <url>https://user-images.githubusercontent.com/8849818/227669578-aace96bd-bfb3-4cd5-9e52-52d8742ed597.jpg</url>
      <link>https://user-images.githubusercontent.com/8849818/227669578-aace96bd-bfb3-4cd5-9e52-52d8742ed597.jpg</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 21 May 2021 20:41:01 +0000</lastBuildDate><atom:link href="https://kyleap.github.io/categories/%E5%87%B1%E7%88%BE%E5%95%83%E6%9B%B8/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>(啃書) Chatbot從0到1</title>
      <link>https://kyleap.github.io/chatbot-zero-to-one/</link>
      <pubDate>Fri, 21 May 2021 20:41:01 +0000</pubDate>
      
      <guid>https://kyleap.github.io/chatbot-zero-to-one/</guid>
      <description>啃書代表是在閱讀時，針對自己有幫助的片段，做反思與紀錄，如想閱讀完整知識建議還是購買完整書籍 :P
 always center.
Chatbot 的機會與未來 近年來 Chatbot 技術興起，使用者下載App意願降低，加上各大平台也開始推出聊天機器人Api串接，開始越來越多應用出現，交互介面已經從傳統的App點擊互動，轉變為對話互動，也因為 Chatbot 依附在各大平台上 e.g Line/Facebook…等，推廣上也較容易，再加上自然語言分析技術日漸成熟，越來越多的AI服務可以應用，可以想像成百上千的 App 會逐漸轉為 Chatbot。
在設計 Chatbot 時，要時刻記得對話交互是手段而非目的，要通過最簡單的互動方式讓使用者獲取服務，而最簡單的交付方式不一定要用對話，這時就能透過圖形化介面與人工接入流程來替使用者完成目標，且應該時時刻刻去觀察使用者的心理變化，觀察上下文，是否造成迷路，觀察對話節奏是否合理，逐步的調教與優化流程，讓重複性的任務交給Bot引導來完成。本書提出軟體開發的生命週期，提供給產品設計師在規劃 Chatbot 產品時一個指南。
思考一下產品定位，定義產品邊界 Chatobt 的應用情境大概可以分為開放領域 (open-domain) 或封閉領域 (closed-domain) 兩大類，開放式大概沒有限定主題，像Google助理或者 Siri 這種問什麼都自由對話，這實踐起來也較困難，而封閉式通常會限縮在一定的場景下，也就是 Chatbot 的輸入輸出是有限的，譬如訂位為在線客服/教育/個人助理，跟這幾個任務無關的事項，就引導客戶能目前能完成什麼事情，僅針對該領域，結合商業.產品.運營，針對領域場景優化交互內容。
以應用市場角度來看，可以將 Chatbot 定為四類:
 陪伴型: 自由回答，譬如兒童陪伴類的Bot 商務型: 協助企業完成商業任務Bot，譬如 Github 推出 Hubot 來完成跟 DevOps 有關的相關任務 資訊型: 讓使用者獲取新聞類的訊息，譬如疾管家 指令型: 透過指令來讓Bot完成一些任務，譬如串接智能家電打開電燈/電視   在設計 Chatbot 前，先思考一下產品定位，把商務型的bot對話設計成像陪伴型，只會讓人感覺到這個Bot很不智能，什麼都不會，造成極差的使用者體驗
 流程設計應專注在完成商業目標及幫助使用者完成任務 影響網站成功的應用程式都有一個共同點，卓越的使用者體驗，Chatbot 可透過以下因素來評估
 如何用最少的步驟解決使使用者問題? 能比其他方式更好解決使用者問題? 能否在使用者習慣的平台上運行 用戶獲取 Chatbot 的途徑是否方便 用戶能無門檻的使用 Chatbot  在進開發前，可透過以下的步驟來收斂需求：先有大量的對話腳本，再來繪製流程圖，Chatbot 常見的技術名詞有意圖 (intent) 及 實體 (entity)，繪製流程圖避免將意圖跟對話混在一起思考，因對話存在多種可能，故不能只考慮核心場景，故可從對話腳本裡面確定場景與優先及拆出意圖跟實體，e.</description>
    </item>
    
    <item>
      <title>精實執行精實創業指南 - 從初始計畫演化為有效計畫</title>
      <link>https://kyleap.github.io/2020-10-21-kyle-bite-book-lean-startup/</link>
      <pubDate>Wed, 21 Oct 2020 20:27:12 +0000</pubDate>
      
      <guid>https://kyleap.github.io/2020-10-21-kyle-bite-book-lean-startup/</guid>
      <description>新創事業為何如此艱難? 經濟部中小企業處提供數據：創業一年內就倒閉的機率高達90%，而存活下來的10%中，又有90%會在五年內倒閉。為何做產品那麼難? 有沒有一個框架能遵循，降低風險，精實創業是一個可以參考的方法論
精實計畫淬鍊成三個步驟  文件化你的初始計畫 識別風險 有系統的試驗計劃   新創會失敗在於跟顧客脫鉤，落於太自我的創新上，直接「走出辦公室」跟顧客面對面吧
 精實畫布收斂想法 先寫下願景，譬如阿里巴巴「讓天下沒有難做的生意」、馬斯克「讓人人都可上月球」，沒有願景則無法往下細拆策略目標 精實畫布是一個迅速、簡明、具可攜性的方式，用來產出「商業模式」
圖片來源：https://ryanisagoodguy.blogspot.com/2016/03/lean-canvas.html
Step 1~2 — 問題與顧客區隔 列出三項痛點，並目前這些痛點有何既有替代方案，識別哪些人會接觸到此服務，並試著專注於可能的早期採用者，主流顧客在早期產品通常無法滿足
Step 3 — 獨特價值主張 「銷售」是一種對話，不管什麼身分.職位其實都是在做銷售 e.g 面試過程其實就是在銷售給面試官；而面試官其實在銷售給優秀人才。擬定好故事，從問題出發，擬定好如何在30秒內闡述獨特主張
Step 4 — 解決方案 針對問題，「草擬」解決方案，為何是草擬？因為會隨著市場變化或經實驗及訪談，會重新排序優先順序，甚至會被新問題取代
Step 5 — 通路 無法建立接觸「足夠」顧客的途徑，是初期創業失敗的原因，個人認為2C早期應至少接觸上百位顧客，2B需找出2~3個指標客戶。
免費的最貴，本書作者 Eric Ries 以他這本書為例實踐精實創業，他一天花5塊錢美金，以每次點擊 5 分錢的成本吸引 100 次點擊
通道要Pull (SEO.Blog…) or Push (活動.電話行銷…)，作為學習，直接銷售最有效；作為營利，直接銷售超過你的薪資整體薪酬才有意義
避免太早建立策略型夥伴，同理銷售人員只能執行你的計劃，非建立計畫。故初期一定得親自販售你的產品 病毒式行銷前提是產品「值得」這樣做
Step 6~7 — 收益來源 &amp;amp; 成本結構 思考定價策略：成本導向、競爭導向、需求導向、差異訂價法、特殊的訂價法(SaaS產品定價)…
成本如何擬定：
 訪談30–50顧客將耗費多少成本 開發MVP將耗費多少成本 (e.g 員工薪資 x 1.6 ~2.0倍) 固定成本(薪資…等).變動成本(雲端費用…等)  Step 8 — 關鍵指標  顧客獲取 顧客啟用 顧客續約 收益 轉介  延伸閱讀：從 AARRR 模型幫助對焦商業目標與設計策略</description>
    </item>
    
  </channel>
</rss>
